name: Build and Publish Package

on: [push, pull_request]

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  tests:
    name: "Testing"
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.7", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip install .
          pip install .[dev,test]

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel

      - name: Run tests with nose
        run: |
          nose2 -v

      - name: Run tests in the example app
        run: |
          python example/flaskr_tests.py

      - name: Build docs
        run: |
          sphinx-build -b html docs/source docs/build/html

  build_and_deploy:
    name: "Build and Deploy"
    needs: tests
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip install .
          pip install .[dev,test]

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel

      - name: Run tests with nose
        run: |
          nose2 -v

      - name: Run tests in the example app
        run: |
          python example/flaskr_tests.py

      - name: Build docs
        run: |
          sphinx-build -b html docs/source docs/build/html
          find . -type f -name "*.html" | while read -r file; do sed -i 's|_static/|./_static/|g' "$file"; done

      - name: Checkout docs branch
        uses: actions/checkout@v4
        with:
          ref: docs
          path: "docs-repository"

      - name: Upload test documentation
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main')
        run: |
          rm -rf docs-repository/main/*
          cp -r docs/build/html/* docs-repository/main/
          cd docs-repository
          git config user.name "${{ secrets.BOT_NAME }}"
          git config user.email "${{ secrets.BOT_EMAIL }}"
          git add . -A
          git commit -m "Update docs for $GITHUB_SHA" || echo "No changes to commit"
          git push
          cd $GITHUB_WORKSPACE

      - name: Publish package to Test PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
          verbose: true
          skip-existing: true
          repository-url: https://test.pypi.org/legacy/

      - name: Upload documentation
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          rm -rf docs-repository/latest/*
          cp -r docs/build/html/* docs-repository/latest/
          mkdir -p docs-repository/$TAG_NAME/
          cp -r docs/build/html/* docs-repository/$TAG_NAME/
          cd docs-repository/
          git config user.name "${{ secrets.BOT_NAME }}"
          git config user.email "${{ secrets.BOT_EMAIL }}"
          sed -i "s|        <!-- bot maker-->|        <!-- bot maker-->\n        <li><a href=\"https://croydon.github.io/flask-xml-rpc-reloaded/$TAG_NAME/\" title=\"Documentation for v$TAG_NAME\">Version $TAG_NAME</a></li>|" index.html
          git add . -A
          git commit -m "Update docs for $GITHUB_SHA" || echo "No changes to commit"
          git push
          cd $GITHUB_WORKSPACE

      - name: Publish package to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
          verbose: true

  github-pages:
    name: "Deploy to GitHub Pages"
    needs: build_and_deploy
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/main') || startsWith(github.ref, 'refs/tags/'))
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write
      pages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: docs
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
